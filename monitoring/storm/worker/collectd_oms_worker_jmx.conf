LoadPlugin java

<Plugin java>    
  JVMArg "-Djava.class.path=/usr/share/collectd/java/collectd-api.jar:/usr/share/collectd/java/generic-jmx.jar"

  LoadPlugin "org.collectd.java.GenericJMX"
  
  <Plugin "GenericJMX">

    <MBean "memory-heap">
      ObjectName "java.lang:type=Memory"      
      InstancePrefix "jvm-memory-heap"
      # Creates four values: committed, init, max, usedG
      <Value>
        Type "memory"  
        Table true
        Attribute "HeapMemoryUsage"
      </Value>
    </MBean>

    <MBean "memory-heap-percent">
        ObjectName "java.lang:type=Memory"
        InstancePrefix "jvm-memory-heap-percent"
        
        <Value>
            Type "memory"
            Table true
            Attribute "HeapMemoryUsagePercent"
        </Value>
    </MBean>

    <MBean "jvm-threading-PeakThreadCount">
        ObjectName "java.lang:type=Threading"
        InstancePrefix "jvm-threading-PeakThreadCount"
        <Value>
            Type "counter"
            Table false
            Attribute "PeakThreadCount"
        </Value>
    </MBean>
    
    <MBean "jvm-threading-DaemonThreadCount">
        ObjectName "java.lang:type=Threading"
        InstancePrefix "jvm-threading-DaemonThreadCount"
        <Value>
            Type "counter"
            Table false
            Attribute "DaemonThreadCount"
        </Value>
    </MBean>
    
    <MBean "jvm-threading-ThreadCount">
        ObjectName "java.lang:type=Threading"
        InstancePrefix "jvm-threading-ThreadCount"
        <Value>
            Type "counter"
            Table false
            Attribute "ThreadCount"
        </Value>
    </MBean>
    
    <MBean "slots-used">
        ObjectName "metrics:name=\"default.default.supervisor:num-slots-used-gauge\""
        InstancePrefix "slots"        
        <Value>
            Type "counter"
            Table false
            Attribute "Value"
        </Value>
    </MBean>
    
    <MBean "workers-launched-Count">
        ObjectName "metrics:name=\"default.default.supervisor:num-workers-launched\""
        InstancePrefix "workers-Count"
        <Value>
            Type "counter"
            Table false
            Attribute "Count"
        </Value>
    </MBean>
    
    <Connection>
      Host "localhost"
      ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:56431/jmxrmi"
      InstancePrefix "supervisor-"
      Collect "memory-heap"
      Collect "jvm-threading-PeakThreadCount"
      Collect "jvm-threading-DaemonThreadCount"
      Collect "jvm-threading-ThreadCount"
      Collect "slots-used"
      Collect "workers-launched-Count"
    </Connection>

    # These need to be added per worker node, the default configuration in HDInsight has 4 workers
    # TODO Find a way to automate generating this config based on the number of workers configured in Ambari/Storm
    <Connection>
      Host "localhost-6700"
      ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:6700/jmxrmi"
      InstancePrefix "worker-6700"
      Collect "memory-heap"
    </Connection>

    <Connection>
      Host "localhost-6700"
      ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:6701/jmxrmi"
      InstancePrefix "worker-6701"
      Collect "memory-heap"
    </Connection>

    <Connection>
      Host "localhost-6702"
      ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:6702/jmxrmi"
      InstancePrefix "worker-6702"
      Collect "memory-heap"
    </Connection>

    <Connection>
      Host "localhost-6703"
      ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:6703/jmxrmi"
      InstancePrefix "worker-6703"
      Collect "memory-heap"
    </Connection>
  </Plugin>
</Plugin>
